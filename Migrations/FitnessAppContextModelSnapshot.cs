// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fitapp.Data;

#nullable disable

namespace fitapp.Migrations
{
    [DbContext(typeof(FitnessAppContext))]
    partial class FitnessAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DietPlanUser", b =>
                {
                    b.Property<int>("DietPlansDietPlanId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("DietPlansDietPlanId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("DietPlanUser");
                });

            modelBuilder.Entity("UserWorkout", b =>
                {
                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutsWorkoutId")
                        .HasColumnType("int");

                    b.HasKey("UsersUserId", "WorkoutsWorkoutId");

                    b.HasIndex("WorkoutsWorkoutId");

                    b.ToTable("UserWorkout");
                });

            modelBuilder.Entity("fitapp.Models.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CallTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CallerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMissed")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("fitapp.Models.DietPlan", b =>
                {
                    b.Property<int>("DietPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DietPlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DietPlanId"));

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DietPlanId")
                        .HasName("PK__DietPlan__D256E16AB6669391");

                    b.ToTable("DietPlans");
                });

            modelBuilder.Entity("fitapp.Models.Gamification", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GameID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("BadgesEarned")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("GameId")
                        .HasName("PK__Gamifica__2AB897DDAB7BA769");

                    b.HasIndex("UserId");

                    b.ToTable("Gamification", null, t =>
                        {
                            t.Property("UserID")
                                .HasColumnName("UserID1");
                        });
                });

            modelBuilder.Entity("fitapp.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("fitapp.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFollowed")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("fitapp.Models.ProgressTracking", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<int?>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int")
                        .HasColumnName("WorkoutID");

                    b.HasKey("ProgressId")
                        .HasName("PK__Progress__BAE29C85206DF6BA");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ProgressTracking", (string)null);
                });

            modelBuilder.Entity("fitapp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmationToken")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<bool?>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MidName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACA48124C2");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534663A7F65")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("fitapp.Models.Voice", b =>
                {
                    b.Property<int>("VoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoiceId"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("VoiceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int")
                        .HasColumnName("WorkoutID");

                    b.HasKey("VoiceId")
                        .HasName("PK__Voices__D870D5876A62D643");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Voices");
                });

            modelBuilder.Entity("fitapp.Models.VrModule", b =>
                {
                    b.Property<int>("Vrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VRID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vrid"));

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Interactions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutID")
                        .HasColumnType("int");

                    b.HasKey("Vrid")
                        .HasName("PK__VR_Modul__4D45925BAFE8E79D");

                    b.HasIndex("WorkoutID");

                    b.ToTable("VR_Module", (string)null);
                });

            modelBuilder.Entity("fitapp.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkoutID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkoutId")
                        .HasName("PK__Workouts__E1C42A214CE9ADC8");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("fitapp.Models.fitapp.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DietPlanUser", b =>
                {
                    b.HasOne("fitapp.Models.DietPlan", null)
                        .WithMany()
                        .HasForeignKey("DietPlansDietPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fitapp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserWorkout", b =>
                {
                    b.HasOne("fitapp.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fitapp.Models.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutsWorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fitapp.Models.Gamification", b =>
                {
                    b.HasOne("fitapp.Models.User", "User")
                        .WithMany("Gamifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Gamificat__UserI__45F365D3");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fitapp.Models.ProgressTracking", b =>
                {
                    b.HasOne("fitapp.Models.User", "User")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProgressT__UserI__3D5E1FD2");

                    b.HasOne("fitapp.Models.Workout", "Workout")
                        .WithMany("ProgressTrackings")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProgressT__Worko__3E52440B");

                    b.Navigation("User");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("fitapp.Models.Voice", b =>
                {
                    b.HasOne("fitapp.Models.Workout", "Workout")
                        .WithMany("Voices")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Voices__WorkoutI__4316F928");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("fitapp.Models.VrModule", b =>
                {
                    b.HasOne("fitapp.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("fitapp.Models.User", b =>
                {
                    b.Navigation("Gamifications");

                    b.Navigation("ProgressTrackings");
                });

            modelBuilder.Entity("fitapp.Models.Workout", b =>
                {
                    b.Navigation("ProgressTrackings");

                    b.Navigation("Voices");
                });
#pragma warning restore 612, 618
        }
    }
}
